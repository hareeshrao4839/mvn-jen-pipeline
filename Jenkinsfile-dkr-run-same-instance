pipeline {

    environment {
       def imageName="drop1/sim"
       DOCKERHUB_CREDENTIALS= "mydkr-pat"
    }
  agent any
  stages {
      stage('Build Artifact') {
            steps {
              sh "mvn clean package -DskipTests=true"
              archive 'target/*.jar' 
            }  
       }

      stage('image bake ') {
            steps {
              script {
                docker.build("${imageName}:${env.BUILD_NUMBER}")
              }
            }
        }
        // stage('Push Docker Image') {
        //     steps {
        //         script {
        //             withCredentials([string(credentialsId: DOCKERHUB_CREDENTIALS, variable: 'DOCKER_TOKEN')]) {
        //                 sh "echo ${DOCKER_TOKEN} | docker login -u hareeshrao4839 --password-stdin"
        //                 docker.image("${imageName}:${env.BUILD_NUMBER}").push()
        //             }
        //         }
        //     }
        // }
        stage('Check and Run Docker Container') {
            steps {
                script {
                    def containerName = "app1"

                    // Check if a container with the same name is running
                    if (sh(script: "docker ps -q -f name=${containerName}", returnStdout: true).trim()) {
                        echo "Stopping and removing existing container..."
                        sh "docker stop ${containerName}"
                        sh "docker rm ${containerName}"
                    }

                    // Run a new container with the same name
                    sh "docker run -d --name ${containerName} your_image_name"
                }
            }
        } 



     }
    //  post {
    //     always {
    //         cleanWs()
    //     }
    //     }
}
